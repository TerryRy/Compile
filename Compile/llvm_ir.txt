declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@_1 = dso_local constant i32 4
@aaa = dso_local constant [2 x i32] [i32 10086, i32 16]

define dso_local i32 @_add_fake(i32 %a0, i32 %a1) {
    %a3 = alloca i32
    store i32 %a0, i32* %a3
    %a4 = alloca i32
    store i32 %a1, i32* %a4
    br label %a5
a5:
    %a9 = load i32, i32* %a4
    %a10 = load i32, i32* %a3
    %a11 = add i32 %a10, %a9
    %a12 = icmp uge i32 %a11, 10186
    br i1 %a12, label %a6, label %a7
a6:
    %a13 = load i32, i32* %a4
    %a14 = mul i32 203, %a13
    %a15 = sdiv i32 %a14, 201
    %a16 = load i32, i32* %a3
    %a17 = add i32 %a16, %a15
    br label %a8
a7:
    br label %a18
a18:
    %a22 = load i32, i32* %a4
    %a23 = load i32, i32* %a3
    %a24 = add i32 %a23, %a22
    %a25 = sub i32 %a24, 10086
    %a26 = icmp ult i32 %a25, 12345678
    br i1 %a26, label %a19, label %a20
a19:
    %a27 = load i32, i32* %a4
    %a28 = mul i32 2022, %a27
    %a29 = sdiv i32 %a28, 2019
    %a30 = load i32, i32* %a3
    %a31 = mul i32 1003, %a30
    %a32 = sdiv i32 %a31, 1009
    %a33 = add i32 %a32, %a29
    br label %a21
a20:
    %a34 = load i32, i32* %a4
    %a35 = load i32, i32* %a3
    %a36 = add i32 %a35, %a34
    %a37 = sub i32 %a36, 233
    br label %a21
a21:
    br label %a8
a8:
    ret i32 -10086
}

define dso_local i32 @_get_id() {
    %a39 = alloca i32
    store i32 0, i32* %a39
    store i32 76, i32* %a39
    %a40 = load i32, i32* %a39
    call void @putint(i32 %a40)
    call void @putch(i32 10)
    store i32 10086, i32* %a39
    %a41 = load i32, i32* %a39
    call void @putint(i32 %a41)
    call void @putch(i32 10)
    %a42 = alloca i32
    store i32 -10, i32* %a42
    %a43 = load i32, i32* %a42
    call void @putint(i32 %a43)
    call void @putch(i32 10)
    ret i32 20373381
}

define dso_local i32 @main() {
    %a45 = alloca i32
    store i32 0, i32* %a45
    %a46 = call i32 @getint()
    store i32 %a46, i32* %a45
    %a47 = alloca i32
    store i32 0, i32* %a47
    %a48 = alloca i32
    store i32 0, i32* %a48
    br label %a49
a49:
    %a53 = icmp ne i32 0, 1
    br i1 %a53, label %a50, label %a52
a50:
    %a55 = load i32, i32* %a47
    %a54 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 %a55
    %a56 = load i32, i32* %a54
    %a57 = load i32, i32* %a48
    %a58 = add i32 %a57, %a56
    store i32 %a58, i32* %a48
    %a59 = load i32, i32* %a47
    %a60 = add i32 %a59, 1
    store i32 %a60, i32* %a47
    br label %a61
a61:
    %a64 = load i32, i32* %a47
    %a65 = icmp uge i32 %a64, 2
    br i1 %a65, label %a62, label %a63
a62:
    br label %a52
    br label %a63
a63:
    br label %a51
a51:
    br label %a49
a52:
    %a66 = alloca i32
    store i32 0, i32* %a66
    br label %a67
a67:
    %a71 = icmp ule i32 1, 2
    br i1 %a71, label %a68, label %a70
a68:
    br label %a72
a72:
    %a75 = load i32, i32* %a66
    %a76 = icmp eq i32 %a75, 5
    br i1 %a76, label %a73, label %a74
a73:
    %a77 = load i32, i32* %a66
    %a78 = add i32 %a77, 1
    store i32 %a78, i32* %a66
    br label %a69
    br label %a74
a74:
    br label %a79
a79:
    %a82 = load i32, i32* %a66
    %a83 = icmp ugt i32 %a82, 10
    br i1 %a83, label %a80, label %a81
a80:
    br label %a70
    br label %a81
a81:
    %a84 = load i32, i32* %a66
    %a85 = add i32 %a84, 1
    store i32 %a85, i32* %a66
    %a86 = load i32, i32* %a66
    %a87 = load i32, i32* %a66
    %a88 = mul i32 %a87, %a86
    %a89 = load i32, i32* %a48
    %a90 = add i32 %a89, %a88
    store i32 %a90, i32* %a48
    br label %a69
a69:
    br label %a67
a70:
    %a91 = load i32, i32* %a48
    call void @putint(i32 %a91)
    call void @putch(i32 10)
    %a92 = load i32, i32* %a45
    %a93 = call i32 @_add_fake(i32 123243, i32 %a92)
    %a94 = call i32 @_get_id()
    %a95 = load i32, i32* %a48
    %a96 = add i32 %a95, %a94
    %a97 = add i32 %a96, %a93
    store i32 %a97, i32* %a48
    %a98 = load i32, i32* %a48
    call void @putint(i32 %a98)
    call void @putch(i32 10)
    ret i32 0
}
