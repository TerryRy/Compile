declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@fib_matrix = dso_local global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 0]]
@__res = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 5, i32 5], [2 x i32] [i32 2, i32 3]]
@__useless = dso_local constant [4 x i32] [i32 1, i32 1, i32 1, i32 0]

define dso_local void @__vec_mul(i32* %a0, [2 x i32]* %a1, i32* %a2) {
    %a4 = alloca i32*
    store i32* %a0, i32** %a4
    %a5 = alloca [2 x i32]*
    store [2 x i32]* %a1, [2 x i32]** %a5
    %a6 = alloca i32*
    store i32* %a2, i32** %a6
    %a8 = load [2 x i32]*, [2 x i32]** %a5
    %a7 = getelementptr [2 x i32], [2 x i32]* %a8, i32 0, i32 1
    %a9 = load i32, i32* %a7
    %a11 = load i32*, i32** %a6
    %a10 = getelementptr i32, i32* %a11, i32 1
    %a12 = load i32, i32* %a10
    %a13 = mul i32 %a12, %a9
    %a15 = load [2 x i32]*, [2 x i32]** %a5
    %a14 = getelementptr [2 x i32], [2 x i32]* %a15, i32 0, i32 0
    %a16 = load i32, i32* %a14
    %a18 = load i32*, i32** %a6
    %a17 = getelementptr i32, i32* %a18, i32 0
    %a19 = load i32, i32* %a17
    %a20 = mul i32 %a19, %a16
    %a21 = add i32 %a20, %a13
    %a23 = load i32*, i32** %a4
    %a22 = getelementptr i32, i32* %a23, i32 0
    store i32 %a21, i32* %a22
    %a25 = load [2 x i32]*, [2 x i32]** %a5
    %a24 = getelementptr [2 x i32], [2 x i32]* %a25, i32 1, i32 1
    %a26 = load i32, i32* %a24
    %a28 = load i32*, i32** %a6
    %a27 = getelementptr i32, i32* %a28, i32 1
    %a29 = load i32, i32* %a27
    %a30 = mul i32 %a29, %a26
    %a32 = load [2 x i32]*, [2 x i32]** %a5
    %a31 = getelementptr [2 x i32], [2 x i32]* %a32, i32 1, i32 0
    %a33 = load i32, i32* %a31
    %a35 = load i32*, i32** %a6
    %a34 = getelementptr i32, i32* %a35, i32 0
    %a36 = load i32, i32* %a34
    %a37 = mul i32 %a36, %a33
    %a38 = add i32 %a37, %a30
    %a40 = load i32*, i32** %a4
    %a39 = getelementptr i32, i32* %a40, i32 1
    store i32 %a38, i32* %a39
    ret void
}

define dso_local void @__mat_mul([2 x i32]* %a41, [2 x i32]* %a42, [2 x i32]* %a43) {
    %a45 = alloca [2 x i32]*
    store [2 x i32]* %a41, [2 x i32]** %a45
    %a46 = alloca [2 x i32]*
    store [2 x i32]* %a42, [2 x i32]** %a46
    %a47 = alloca [2 x i32]*
    store [2 x i32]* %a43, [2 x i32]** %a47
    %a49 = load [2 x i32]*, [2 x i32]** %a47
    %a48 = getelementptr [2 x i32], [2 x i32]* %a49, i32 1, i32 0
    %a50 = load i32, i32* %a48
    %a52 = load [2 x i32]*, [2 x i32]** %a46
    %a51 = getelementptr [2 x i32], [2 x i32]* %a52, i32 0, i32 1
    %a53 = load i32, i32* %a51
    %a54 = mul i32 %a53, %a50
    %a56 = load [2 x i32]*, [2 x i32]** %a47
    %a55 = getelementptr [2 x i32], [2 x i32]* %a56, i32 0, i32 0
    %a57 = load i32, i32* %a55
    %a59 = load [2 x i32]*, [2 x i32]** %a46
    %a58 = getelementptr [2 x i32], [2 x i32]* %a59, i32 0, i32 0
    %a60 = load i32, i32* %a58
    %a61 = mul i32 %a60, %a57
    %a62 = add i32 %a61, %a54
    %a64 = load [2 x i32]*, [2 x i32]** %a45
    %a63 = getelementptr [2 x i32], [2 x i32]* %a64, i32 0, i32 0
    store i32 %a62, i32* %a63
    %a66 = load [2 x i32]*, [2 x i32]** %a47
    %a65 = getelementptr [2 x i32], [2 x i32]* %a66, i32 1, i32 1
    %a67 = load i32, i32* %a65
    %a69 = load [2 x i32]*, [2 x i32]** %a46
    %a68 = getelementptr [2 x i32], [2 x i32]* %a69, i32 0, i32 1
    %a70 = load i32, i32* %a68
    %a71 = mul i32 %a70, %a67
    %a73 = load [2 x i32]*, [2 x i32]** %a47
    %a72 = getelementptr [2 x i32], [2 x i32]* %a73, i32 0, i32 1
    %a74 = load i32, i32* %a72
    %a76 = load [2 x i32]*, [2 x i32]** %a46
    %a75 = getelementptr [2 x i32], [2 x i32]* %a76, i32 0, i32 0
    %a77 = load i32, i32* %a75
    %a78 = mul i32 %a77, %a74
    %a79 = add i32 %a78, %a71
    %a81 = load [2 x i32]*, [2 x i32]** %a45
    %a80 = getelementptr [2 x i32], [2 x i32]* %a81, i32 0, i32 1
    store i32 %a79, i32* %a80
    %a83 = load [2 x i32]*, [2 x i32]** %a47
    %a82 = getelementptr [2 x i32], [2 x i32]* %a83, i32 1, i32 0
    %a84 = load i32, i32* %a82
    %a86 = load [2 x i32]*, [2 x i32]** %a46
    %a85 = getelementptr [2 x i32], [2 x i32]* %a86, i32 1, i32 1
    %a87 = load i32, i32* %a85
    %a88 = mul i32 %a87, %a84
    %a90 = load [2 x i32]*, [2 x i32]** %a47
    %a89 = getelementptr [2 x i32], [2 x i32]* %a90, i32 0, i32 0
    %a91 = load i32, i32* %a89
    %a93 = load [2 x i32]*, [2 x i32]** %a46
    %a92 = getelementptr [2 x i32], [2 x i32]* %a93, i32 1, i32 0
    %a94 = load i32, i32* %a92
    %a95 = mul i32 %a94, %a91
    %a96 = add i32 %a95, %a88
    %a98 = load [2 x i32]*, [2 x i32]** %a45
    %a97 = getelementptr [2 x i32], [2 x i32]* %a98, i32 1, i32 0
    store i32 %a96, i32* %a97
    %a100 = load [2 x i32]*, [2 x i32]** %a47
    %a99 = getelementptr [2 x i32], [2 x i32]* %a100, i32 1, i32 1
    %a101 = load i32, i32* %a99
    %a103 = load [2 x i32]*, [2 x i32]** %a46
    %a102 = getelementptr [2 x i32], [2 x i32]* %a103, i32 1, i32 1
    %a104 = load i32, i32* %a102
    %a105 = mul i32 %a104, %a101
    %a107 = load [2 x i32]*, [2 x i32]** %a47
    %a106 = getelementptr [2 x i32], [2 x i32]* %a107, i32 0, i32 1
    %a108 = load i32, i32* %a106
    %a110 = load [2 x i32]*, [2 x i32]** %a46
    %a109 = getelementptr [2 x i32], [2 x i32]* %a110, i32 1, i32 0
    %a111 = load i32, i32* %a109
    %a112 = mul i32 %a111, %a108
    %a113 = add i32 %a112, %a105
    %a115 = load [2 x i32]*, [2 x i32]** %a45
    %a114 = getelementptr [2 x i32], [2 x i32]* %a115, i32 1, i32 1
    store i32 %a113, i32* %a114
    ret void
}

define dso_local i32 @__power(i32 %a116, [2 x i32]* %a117, [2 x i32]* %a118) {
    %a120 = alloca i32
    store i32 %a116, i32* %a120
    %a121 = alloca [2 x i32]*
    store [2 x i32]* %a117, [2 x i32]** %a121
    %a122 = alloca [2 x i32]*
    store [2 x i32]* %a118, [2 x i32]** %a122
    br label %a123
a123:
    %a127 = load i32, i32* %a120
    %a128 = icmp eq i32 %a127, 1
    br i1 %a128, label %a124, label %a125
a124:
    %a130 = load [2 x i32]*, [2 x i32]** %a121
    %a129 = getelementptr [2 x i32], [2 x i32]* %a130, i32 0, i32 0
    %a131 = load i32, i32* %a129
    %a133 = load [2 x i32]*, [2 x i32]** %a122
    %a132 = getelementptr [2 x i32], [2 x i32]* %a133, i32 0, i32 0
    store i32 %a131, i32* %a132
    %a135 = load [2 x i32]*, [2 x i32]** %a121
    %a134 = getelementptr [2 x i32], [2 x i32]* %a135, i32 0, i32 1
    %a136 = load i32, i32* %a134
    %a138 = load [2 x i32]*, [2 x i32]** %a122
    %a137 = getelementptr [2 x i32], [2 x i32]* %a138, i32 0, i32 1
    store i32 %a136, i32* %a137
    %a140 = load [2 x i32]*, [2 x i32]** %a121
    %a139 = getelementptr [2 x i32], [2 x i32]* %a140, i32 1, i32 0
    %a141 = load i32, i32* %a139
    %a143 = load [2 x i32]*, [2 x i32]** %a122
    %a142 = getelementptr [2 x i32], [2 x i32]* %a143, i32 1, i32 0
    store i32 %a141, i32* %a142
    %a145 = load [2 x i32]*, [2 x i32]** %a121
    %a144 = getelementptr [2 x i32], [2 x i32]* %a145, i32 1, i32 1
    %a146 = load i32, i32* %a144
    %a148 = load [2 x i32]*, [2 x i32]** %a122
    %a147 = getelementptr [2 x i32], [2 x i32]* %a148, i32 1, i32 1
    store i32 %a146, i32* %a147
    ret i32 0
    br label %a126
a125:
    %a150 = load [2 x i32]*, [2 x i32]** %a122
    %a149 = getelementptr [2 x i32], [2 x i32]* %a150
    %a152 = load [2 x i32]*, [2 x i32]** %a121
    %a151 = getelementptr [2 x i32], [2 x i32]* %a152
    %a153 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @fib_matrix, i32 0
    %a154 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a153, i32 0, i32 0
    call void @__mat_mul([2 x i32]* %a149, [2 x i32]* %a151, [2 x i32]* %a154)
    %a156 = load [2 x i32]*, [2 x i32]** %a122
    %a155 = getelementptr [2 x i32], [2 x i32]* %a156, i32 0, i32 0
    %a157 = load i32, i32* %a155
    %a159 = load [2 x i32]*, [2 x i32]** %a121
    %a158 = getelementptr [2 x i32], [2 x i32]* %a159, i32 0, i32 0
    store i32 %a157, i32* %a158
    %a161 = load [2 x i32]*, [2 x i32]** %a122
    %a160 = getelementptr [2 x i32], [2 x i32]* %a161, i32 0, i32 1
    %a162 = load i32, i32* %a160
    %a164 = load [2 x i32]*, [2 x i32]** %a121
    %a163 = getelementptr [2 x i32], [2 x i32]* %a164, i32 0, i32 1
    store i32 %a162, i32* %a163
    %a166 = load [2 x i32]*, [2 x i32]** %a122
    %a165 = getelementptr [2 x i32], [2 x i32]* %a166, i32 1, i32 0
    %a167 = load i32, i32* %a165
    %a169 = load [2 x i32]*, [2 x i32]** %a121
    %a168 = getelementptr [2 x i32], [2 x i32]* %a169, i32 1, i32 0
    store i32 %a167, i32* %a168
    %a171 = load [2 x i32]*, [2 x i32]** %a122
    %a170 = getelementptr [2 x i32], [2 x i32]* %a171, i32 1, i32 1
    %a172 = load i32, i32* %a170
    %a174 = load [2 x i32]*, [2 x i32]** %a121
    %a173 = getelementptr [2 x i32], [2 x i32]* %a174, i32 1, i32 1
    store i32 %a172, i32* %a173
    %a175 = load i32, i32* %a120
    %a176 = sub i32 %a175, 1
    %a178 = load [2 x i32]*, [2 x i32]** %a121
    %a177 = getelementptr [2 x i32], [2 x i32]* %a178
    %a180 = load [2 x i32]*, [2 x i32]** %a122
    %a179 = getelementptr [2 x i32], [2 x i32]* %a180
    %a181 = call i32 @__power(i32 %a176, [2 x i32]* %a177, [2 x i32]* %a179)
    ret i32 %a181
    br label %a126
a126:
    ret i32 0
}

define dso_local i32 @power(i32 %a182, [2 x i32]* %a183) {
    %a185 = alloca i32
    store i32 %a182, i32* %a185
    %a186 = alloca [2 x i32]*
    store [2 x i32]* %a183, [2 x i32]** %a186
    br label %a187
a187:
    %a190 = load i32, i32* %a185
    %a191 = icmp sle i32 %a190, 0
    br i1 %a191, label %a188, label %a189
a188:
    ret i32 -1
    br label %a189
a189:
    %a192 = alloca [2 x [2 x i32]]
    %a193 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a192, i32 0, i32 0, i32 0
    store i32 1, i32* %a193
    %a194 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a192, i32 0, i32 0, i32 1
    store i32 1, i32* %a194
    %a195 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a192, i32 0, i32 1, i32 0
    store i32 1, i32* %a195
    %a196 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a192, i32 0, i32 1, i32 1
    store i32 0, i32* %a196
    %a197 = load i32, i32* %a185
    %a198 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a192, i32 0
    %a199 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a198, i32 0, i32 0
    %a201 = load [2 x i32]*, [2 x i32]** %a186
    %a200 = getelementptr [2 x i32], [2 x i32]* %a201
    %a202 = call i32 @__power(i32 %a197, [2 x i32]* %a199, [2 x i32]* %a200)
    ret i32 %a202
}

define dso_local i32 @error() {
    call void @putch(i32 69)
    call void @putch(i32 114)
    call void @putch(i32 114)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 33)
    call void @putch(i32 10)
    ret i32 1
}

define dso_local i32 @out([2 x i32]* %a204) {
    %a206 = alloca [2 x i32]*
    store [2 x i32]* %a204, [2 x i32]** %a206
    %a208 = load [2 x i32]*, [2 x i32]** %a206
    %a207 = getelementptr [2 x i32], [2 x i32]* %a208, i32 0, i32 0
    %a209 = load i32, i32* %a207
    call void @putint(i32 %a209)
    call void @putch(i32 32)
    %a211 = load [2 x i32]*, [2 x i32]** %a206
    %a210 = getelementptr [2 x i32], [2 x i32]* %a211, i32 0, i32 1
    %a212 = load i32, i32* %a210
    call void @putint(i32 %a212)
    call void @putch(i32 10)
    %a214 = load [2 x i32]*, [2 x i32]** %a206
    %a213 = getelementptr [2 x i32], [2 x i32]* %a214, i32 1, i32 0
    %a215 = load i32, i32* %a213
    call void @putint(i32 %a215)
    call void @putch(i32 32)
    %a217 = load [2 x i32]*, [2 x i32]** %a206
    %a216 = getelementptr [2 x i32], [2 x i32]* %a217, i32 1, i32 1
    %a218 = load i32, i32* %a216
    call void @putint(i32 %a218)
    call void @putch(i32 10)
    ret i32 1
}

define dso_local i32 @main() {
    %a220 = alloca i32
    store i32 0, i32* %a220
    %a221 = alloca i32
    store i32 0, i32* %a221
    %a222 = call i32 @getint()
    store i32 %a222, i32* %a221
    %a223 = alloca [2 x i32]
    %a224 = getelementptr [2 x i32], [2 x i32] * %a223, i32 0, i32 0
    store i32 0, i32* %a224
    %a225 = getelementptr [2 x i32], [2 x i32] * %a223, i32 0, i32 1
    store i32 0, i32* %a225
    %a226 = alloca [2 x [2 x i32]]
    %a227 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a226, i32 0, i32 0, i32 0
    store i32 0, i32* %a227
    %a228 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a226, i32 0, i32 0, i32 1
    store i32 0, i32* %a228
    %a229 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a226, i32 0, i32 1, i32 0
    store i32 0, i32* %a229
    %a230 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]] * %a226, i32 0, i32 1, i32 1
    store i32 0, i32* %a230
    %a231 = alloca [6 x [2 x i32]]
    %a232 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 0, i32 0
    store i32 1, i32* %a232
    %a233 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 0, i32 1
    store i32 0, i32* %a233
    %a234 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 1, i32 0
    store i32 1, i32* %a234
    %a235 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 1, i32 1
    store i32 1, i32* %a235
    %a236 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 2, i32 0
    store i32 2, i32* %a236
    %a237 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 2, i32 1
    store i32 1, i32* %a237
    %a238 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 3, i32 0
    store i32 3, i32* %a238
    %a239 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 3, i32 1
    store i32 1, i32* %a239
    %a240 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 4, i32 0
    store i32 4, i32* %a240
    %a241 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 4, i32 1
    store i32 3, i32* %a241
    %a242 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 5, i32 0
    store i32 -1, i32* %a242
    %a243 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]] * %a231, i32 0, i32 5, i32 1
    store i32 1, i32* %a243
    call void @putch(i32 97)
    call void @putch(i32 91)
    call void @putch(i32 110)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 91)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 45)
    call void @putch(i32 32)
    call void @putch(i32 49)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 43)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 91)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 45)
    call void @putch(i32 32)
    call void @putch(i32 50)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 40)
    call void @putch(i32 102)
    call void @putch(i32 111)
    call void @putch(i32 114)
    call void @putch(i32 32)
    call void @putch(i32 100)
    call void @putch(i32 105)
    call void @putch(i32 102)
    call void @putch(i32 102)
    call void @putch(i32 101)
    call void @putch(i32 114)
    call void @putch(i32 101)
    call void @putch(i32 110)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 110)
    call void @putch(i32 105)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 118)
    call void @putch(i32 97)
    call void @putch(i32 108)
    call void @putch(i32 117)
    call void @putch(i32 101)
    call void @putch(i32 115)
    call void @putch(i32 41)
    call void @putch(i32 10)
    br label %a244
a244:
    %a248 = load i32, i32* %a221
    %a249 = icmp sgt i32 %a248, 0
    br i1 %a249, label %a245, label %a247
a245:
    %a250 = alloca i32
    store i32 0, i32* %a250
    %a251 = call i32 @getint()
    store i32 %a251, i32* %a250
    %a252 = load i32, i32* %a250
    %a253 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a226, i32 0
    %a254 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a253, i32 0, i32 0
    %a255 = call i32 @power(i32 %a252, [2 x i32]* %a254)
    %a256 = alloca i32
    store i32 %a255, i32* %a256
    call void @putch(i32 47)
    call void @putch(i32 42)
    call void @putch(i32 32)
    call void @putch(i32 105)
    call void @putch(i32 110)
    call void @putch(i32 112)
    call void @putch(i32 117)
    call void @putch(i32 116)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    %a257 = load i32, i32* %a250
    call void @putint(i32 %a257)
    call void @putch(i32 32)
    call void @putch(i32 42)
    call void @putch(i32 47)
    call void @putch(i32 10)
    br label %a258
a258:
    %a262 = load i32, i32* %a256
    %a263 = icmp ne i32 0, %a262
    br i1 %a263, label %a261, label %a260
a261:
    %a264 = call i32 @error()
    %a265 = icmp ne i32 0, %a264
    br i1 %a265, label %a259, label %a260
a259:
    %a266 = load i32, i32* %a221
    %a267 = sub i32 %a266, 1
    store i32 %a267, i32* %a221
    br label %a246
    br label %a260
a260:
    br label %a268
a268:
    %a272 = load i32, i32* %a256
    %a273 = icmp ne i32 0, %a272
    br i1 %a273, label %a269, label %a271
a271:
    %a274 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a226, i32 0
    %a275 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a274, i32 0, i32 0
    %a276 = call i32 @out([2 x i32]* %a275)
    %a277 = icmp ne i32 0, %a276
    br i1 %a277, label %a269, label %a270
a269:
    %a278 = alloca i32
    store i32 0, i32* %a278
    br label %a279
a279:
    %a284 = load i32, i32* %a278
    %a285 = icmp slt i32 %a284, 6
    br i1 %a285, label %a280, label %a283
a283:
    %a286 = icmp ne i32 0, 1
    br i1 %a286, label %a280, label %a282
a280:
    %a287 = getelementptr [2 x i32], [2 x i32]* %a223, i32 0
    %a288 = getelementptr [2 x i32], [2 x i32]* %a287, i32 0, i32 0
    %a289 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a226, i32 0
    %a290 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %a289, i32 0, i32 0
    %a292 = load i32, i32* %a278
    %a291 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %a231, i32 0, i32 %a292
    %a293 = getelementptr [2 x i32], [2 x i32]* %a291, i32 0, i32 0
    call void @__vec_mul(i32* %a288, [2 x i32]* %a290, i32* %a293)
    call void @putch(i32 119)
    call void @putch(i32 104)
    call void @putch(i32 101)
    call void @putch(i32 110)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 91)
    call void @putch(i32 48)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    %a295 = load i32, i32* %a278
    %a294 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %a231, i32 0, i32 %a295, i32 1
    %a296 = load i32, i32* %a294
    call void @putint(i32 %a296)
    call void @putch(i32 44)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 91)
    call void @putch(i32 49)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    %a298 = load i32, i32* %a278
    %a297 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %a231, i32 0, i32 %a298, i32 0
    %a299 = load i32, i32* %a297
    call void @putint(i32 %a299)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 61)
    call void @putch(i32 62)
    call void @putch(i32 32)
    call void @putch(i32 97)
    call void @putch(i32 91)
    %a300 = load i32, i32* %a250
    call void @putint(i32 %a300)
    call void @putch(i32 93)
    call void @putch(i32 32)
    call void @putch(i32 61)
    call void @putch(i32 32)
    %a301 = getelementptr [2 x i32], [2 x i32]* %a223, i32 0, i32 1
    %a302 = load i32, i32* %a301
    call void @putint(i32 %a302)
    call void @putch(i32 10)
    %a303 = load i32, i32* %a278
    %a304 = add i32 %a303, 1
    store i32 %a304, i32* %a278
    br label %a305
a305:
    %a309 = load i32, i32* %a278
    %a310 = icmp sge i32 %a309, 6
    br i1 %a310, label %a306, label %a307
a306:
    br label %a282
    br label %a308
a307:
    br label %a281
    br label %a308
a308:
    br label %a281
a281:
    br label %a279
a282:
    br label %a270
a270:
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 47)
    call void @putch(i32 10)
    %a311 = load i32, i32* %a221
    %a312 = sub i32 1, %a311
    %a313 = mul i32 -1, %a312
    %a314 = mul i32 -1, %a313
    %a315 = mul i32 -1, %a314
    store i32 %a315, i32* %a221
    br label %a246
a246:
    br label %a244
a247:
    call void @putch(i32 47)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 32)
    call void @putch(i32 69)
    call void @putch(i32 78)
    call void @putch(i32 68)
    call void @putch(i32 32)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 42)
    call void @putch(i32 47)
    call void @putch(i32 10)
    ret i32 0
}
