CONSTTK const
INTTK int
IDENFR array
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
INTCON 1
COMMA ,
INTCON 2
RBRACE }
SEMICN ;
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR c
SEMICN ;
IDENFR c
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON "output is %d"
COMMA ,
IDENFR c
RPARENT )
SEMICN ;
IFTK if
LPARENT (
IDENFR c
GRE >
INTCON 0
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR c
GEQ >=
INTCON 0
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR c
LSS <
INTCON 0
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR c
LEQ <=
INTCON 0
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR c
NEQ !=
INTCON 0
RPARENT )
LBRACE {
BREAKTK break
SEMICN ;
RBRACE }
RETURNTK return
IDENFR c
SEMICN ;
RBRACE }
VOIDTK void
IDENFR get
LPARENT (
RPARENT )
LBRACE {
FORTK for
LPARENT (
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
INTCON 0
AND &&
IDENFR i
LSS <
INTCON 0
OR ||
IDENFR i
LSS <
INTCON 0
SEMICN ;
IDENFR i
PLUS +
ASSIGN =
INTCON 1
RPARENT )
LBRACE {
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IDENFR i
MINU -
INTCON 1
SEMICN ;
IDENFR i
MULT *
INTCON 1
SEMICN ;
IDENFR i
DIV /
INTCON 1
SEMICN ;
IDENFR i
MOD %
INTCON 1
SEMICN ;
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
ASSIGN =
MINU -
INTCON 1
SEMICN ;
