const int const_a = 1;

int int_a = 0 + 0;

int int_b, int_c;

const int const_array[10] = {0, 1};

const int const_double[1][1] = {{0}};

int array_a[10] = {0, 1};
int array_b[10][10] = {{0, 1}};

void output_pai()

{
    int flag = 0;
    if (flag != 0 && flag == 0 || flag != 1) {printf("3.1415926\n");}
}

int isPrime(int n) {
    int i = 2;
    if (n <= 0) {
        return 0;
    }
    while (i < (n / 2)) {
        if (n % i == 0) {
            return 0;
        }
        i = i + 1;
    }
    return 1;
}

int addNum(int x, int y) {
    return x + y;
}

int addArray(int x[]) {
    int i = 0;
    int sum = 0;
    while (i < 10) {
        sum = sum + const_array[i];
        i = i + 1;
    }
    return sum;
}


int main() {

    printf("21371495\n");
    output_pai();
    ;
    1 + 1;
    int t;
    t = getint();
    printf("t isPrime ? %d\n", isPrime(t));

    if (const_a >= int_b ) {int_a = 1;}
    if (const_a >= int_c) {int_a = int_a + 2;} else {int_a = int_a;}
    printf("%d\n", int_a);

    printf("a + a = %d\n", addNum(const_a, const_a));
    printf("sum Array = %d\n", addArray(array_a));

    int array[100];
    int i = 0, j;
    int_c = i + 3 * 2 / 2;
    j = 0;
    while (i < 100) {
        if (i % 2 == 0 || i % 3 == 0 || j % 5 == 2) {
            array[i] = 1;
        } else {
            array[i] = 0;
        }
        i = i + 1;
        j = j + 3;
    }


    int map[100][100] = {{0}};
    i = array[1];
    j = map[0][0];
    while (i < 100) {
        while (j < 100) {
            if (i % 2 == 0 || i - 3 == 0 || j % 5 == 2) {
                map[i][j] = 1;
            } else {
                map[i][j] = 0;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    const int const_b = array[2], const_c = map[2][5];
    printf("%d\n", const_b);
    printf("%d\n", const_c);
    printf("%d\n", const_double[0][0]);
    printf("%d\n",array_b[0][0]);

    return 0;
}